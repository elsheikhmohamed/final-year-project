{"ast":null,"code":"var _jsxFileName = \"/Users/mohamed/Desktop/youtube2022-react-social-ui/src/context/darkModeContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DarkModeContext = /*#__PURE__*/createContext({\n  darkMode: false,\n  toggle: () => {}\n});\nexport const DarkModeContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [darkMode, setDarkMode] = useState(() => {\n    // Get the value from localStorage if it exists, otherwise use false\n    return localStorage.getItem(\"darkMode\") === \"true\" ? true : false;\n  });\n  const toggle = () => {\n    // Update the state value and save to localStorage\n    setDarkMode(!darkMode);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"darkMode\", darkMode);\n    const root = document.documentElement;\n    if (darkMode) {\n      root.classList.add(\"dark\");\n    } else {\n      root.classList.remove(\"dark\");\n    }\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(DarkModeContext.Provider, {\n    value: {\n      darkMode,\n      toggle\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(DarkModeContextProvider, \"qEuqAmUBh+xUPZj7ij28GqMqN0c=\");\n_c = DarkModeContextProvider;\nvar _c;\n$RefreshReg$(_c, \"DarkModeContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","jsxDEV","_jsxDEV","DarkModeContext","darkMode","toggle","DarkModeContextProvider","_ref","_s","children","setDarkMode","localStorage","getItem","setItem","root","document","documentElement","classList","add","remove","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mohamed/Desktop/youtube2022-react-social-ui/src/context/darkModeContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nexport const DarkModeContext = createContext({\n  darkMode: false,\n  toggle: () => {}\n});\n\nexport const DarkModeContextProvider = ({ children }) => {\n  const [darkMode, setDarkMode] = useState(() => {\n    // Get the value from localStorage if it exists, otherwise use false\n    return localStorage.getItem(\"darkMode\") === \"true\" ? true : false;\n  });\n\n  const toggle = () => {\n    // Update the state value and save to localStorage\n    setDarkMode(!darkMode);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"darkMode\", darkMode);\n    const root = document.documentElement;\n    if (darkMode) {\n      root.classList.add(\"dark\");\n    } else {\n      root.classList.remove(\"dark\");\n    }\n  }, [darkMode]);\n\n  return (\n    <DarkModeContext.Provider value={{ darkMode, toggle }}>\n      {children}\n    </DarkModeContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,eAAe,gBAAGL,aAAa,CAAC;EAC3CM,QAAQ,EAAE,KAAK;EACfC,MAAM,EAAEA,CAAA,KAAM,CAAC;AACjB,CAAC,CAAC;AAEF,OAAO,MAAMC,uBAAuB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAClD,MAAM,CAACH,QAAQ,EAAEM,WAAW,CAAC,GAAGV,QAAQ,CAAC,MAAM;IAC7C;IACA,OAAOW,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK;EACnE,CAAC,CAAC;EAEF,MAAMP,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAK,WAAW,CAAC,CAACN,QAAQ,CAAC;EACxB,CAAC;EAEDL,SAAS,CAAC,MAAM;IACdY,YAAY,CAACE,OAAO,CAAC,UAAU,EAAET,QAAQ,CAAC;IAC1C,MAAMU,IAAI,GAAGC,QAAQ,CAACC,eAAe;IACrC,IAAIZ,QAAQ,EAAE;MACZU,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAC5B,CAAC,MAAM;MACLJ,IAAI,CAACG,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IAC/B;EACF,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EAEd,oBACEF,OAAA,CAACC,eAAe,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,QAAQ;MAAEC;IAAO,CAAE;IAAAI,QAAA,EACnDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACgB;AAE/B,CAAC;AAACjB,EAAA,CA1BWF,uBAAuB;AAAAoB,EAAA,GAAvBpB,uBAAuB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}